# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32F072 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB8/PB9)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 06b07aa26707

[adxl345]
cs_pin: EBBCan: PB12
spi_bus: spi2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20  # an example

[extruder]
step_pin: EBBCan: PA9
dir_pin: !EBBCan: PA8
enable_pin: !EBBCan: PA10
microsteps: 16
rotation_distance: 22.6789511 
gear_ratio: 50:10

nozzle_diameter: 0.600
filament_diameter: 1.750

pressure_advance: 0.03
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

heater_pin: EBBCan: PB1
sensor_type: Generic 3950
# sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA0
control: pid
pid_Kp: 30.385
pid_Ki: 2.155
pid_Kd: 107.110
min_temp: 0
max_temp: 295

# KAMP
max_extrude_cross_section: 5

[tmc2209 extruder]
uart_pin: EBBCan: PA13
run_current: 0.65
# stealthchop_threshold: 999999

[firmware_retraction]
retract_length: 0.75
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 35
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA2
heater: extruder
heater_temp: 50.0

[neopixel hotend_rgb]
pin: EBBCan:PA3
chain_count: 3
initial_WHITE: 1.0
initial_RED: 0.4

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB6

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB7

[temperature_sensor ebb_temp]
## EBB36 Temps
sensor_type: temperature_mcu
sensor_mcu: EBBCan
max_temp: 100


#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
# pin: EBBCan: PC13
pin: ^EBBCan: PA4
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0
#z_offset: 25
speed: 15
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.020
samples_tolerance_retries: 10

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
